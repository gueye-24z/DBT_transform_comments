name: DBT CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  # Job de Tests
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Configurer le fichier profiles.yml avec les secrets et le paramètre threads
      - name: Configure dbt profile
        run: |
          mkdir -p ~/.dbt
          echo "
          DBT_transform_comments:
            outputs:
              dev:
                account: \"${{ secrets.SNOWFLAKE_ACCOUNT }}\"
                user: \"${{ secrets.SNOWFLAKE_USER }}\"
                password: \"${{ secrets.SNOWFLAKE_PASSWORD }}\"
                role: \"${{ secrets.SNOWFLAKE_ROLE }}\"
                database: \"${{ secrets.SNOWFLAKE_DATABASE }}\"
                warehouse: \"${{ secrets.SNOWFLAKE_WAREHOUSE }}\"
                schema: \"${{ secrets.SNOWFLAKE_SCHEMA }}\"
                threads: 1
                type: snowflake
            target: dev
          " > ~/.dbt/profiles.yml

      # Vérifier que profiles.yml est bien créé et afficher son contenu
      - name: Verify profiles.yml
        run: |
          echo "Listing contents of ~/.dbt directory:"
          ls -la ~/.dbt
          echo "Displaying contents of ~/.dbt/profiles.yml:"
          cat ~/.dbt/profiles.yml

      - name: Test DBT Project Configuration
        run: dbt debug
        env:
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
          SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}

      - name: Compile DBT Project
        run: dbt compile
        env:
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
          SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}

      - name: Run DBT tests
        run: dbt test
        env:
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
          SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}

      - name: Run pytest tests
        run: pytest tests/unit

  # Job de Déploiement
  deploy:
    runs-on: ubuntu-latest
    needs: test  # Exécute le déploiement uniquement si le job de tests réussit

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Configurer le fichier profiles.yml pour le déploiement aussi
      - name: Configure dbt profile for deployment
        run: |
          mkdir -p ~/.dbt
          echo "
          DBT_transform_comments:
            outputs:
              dev:
                account: \"${{ secrets.SNOWFLAKE_ACCOUNT }}\"
                user: \"${{ secrets.SNOWFLAKE_USER }}\"
                password: \"${{ secrets.SNOWFLAKE_PASSWORD }}\"
                role: \"${{ secrets.SNOWFLAKE_ROLE }}\"
                database: \"${{ secrets.SNOWFLAKE_DATABASE }}\"
                warehouse: \"${{ secrets.SNOWFLAKE_WAREHOUSE }}\"
                schema: \"${{ secrets.SNOWFLAKE_SCHEMA }}\"
                threads: 1
                type: snowflake
            target: dev
          " > ~/.dbt/profiles.yml

      - name: Verify profiles.yml for deployment
        run: |
          echo "Listing contents of ~/.dbt directory for deployment:"
          ls -la ~/.dbt
          echo "Displaying contents of ~/.dbt/profiles.yml for deployment:"
          cat ~/.dbt/profiles.yml

      - name: Package code for Lambda
        run: |
          mkdir package
          shopt -s extglob  # Activer les globbing avancés pour exclure le dossier
          cp -r !(package) package  # Copier tous les fichiers sauf le dossier 'package'
          cd package
          zip -r ../dbt_lambda_package.zip .

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: eu-west-3  
  
      - name: Deploy to AWS Lambda
        run: |
          aws lambda update-function-code \
            --function-name dbt_runner_lambda \
            --zip-file fileb://dbt_lambda_package.zip


