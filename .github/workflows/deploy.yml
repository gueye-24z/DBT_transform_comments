name: DBT CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  # Job de Préparation
  setup:
    runs-on: ubuntu-latest
    outputs:
      dbt_profile_path: ~/.dbt/profiles.yml
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Configuration de dbt profile
      - name: Configure dbt profile
        id: dbt_profile
        run: |
          mkdir -p ~/.dbt
          echo "
          DBT_transform_comments:
            outputs:
              dev:
                account: \"${{ secrets.SNOWFLAKE_ACCOUNT }}\"
                user: \"${{ secrets.SNOWFLAKE_USER }}\"
                password: \"${{ secrets.SNOWFLAKE_PASSWORD }}\"
                role: \"${{ secrets.SNOWFLAKE_ROLE }}\"
                database: \"${{ secrets.SNOWFLAKE_DATABASE }}\"
                warehouse: \"${{ secrets.SNOWFLAKE_WAREHOUSE }}\"
                schema: \"${{ secrets.SNOWFLAKE_SCHEMA }}\"
                type: snowflake
            target: dev
          " > ~/.dbt/profiles.yml

  # Job de Tests, dépendant de la préparation
  test:
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Test DBT Project Configuration
        run: dbt debug

      - name: Compile DBT Project
        run: dbt compile

      - name: Run DBT tests
        run: dbt test

      - name: Run pytest tests
        run: pytest tests/unit

  # Job de Déploiement, dépendant de la préparation
  deploy:
    runs-on: ubuntu-latest
    needs: [setup, test]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Package code for Lambda
        run: |
          mkdir package
          cp -r * package
          cd package
          zip -r ../dbt_lambda_package.zip .

      - name: Deploy to AWS Lambda
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws lambda update-function-code \
            --function-name dbt_runner_lambda \
            --zip-file fileb://dbt_lambda_package.zip
